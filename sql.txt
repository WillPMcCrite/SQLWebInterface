1. Show the subject names of books supplied by *supplier2*.

SELECT DISTINCT Subjects.CategoryName
FROM Subjects
JOIN Books ON Subjects.SubjectID = Books.SubjectID
WHERE Books.SupplierID = 2;

CategoryName
category1
category2

2. Show the name and price of the most expensive book supplied by *supplier3*.

SELECT Title, UnitPrice
FROM Books
WHERE SupplierID = 3
ORDER BY UnitPrice DESC
LIMIT 1;

Title	UnitPrice
book7	56.90

3. Show the unique names of all books ordered by *lastname1 firstname1*.

SELECT DISTINCT Books.Title
FROM Books
JOIN OrderDetails ON Books.BookID = OrderDetails.BookID
JOIN Orders ON OrderDetails.OrderID = Orders.OrderID
JOIN Customers ON Orders.CustomerID = Customers.CustomerID
WHERE Customers.LastName = 'lastname1' AND Customers.FirstName = 'firstname1';

4. Show the title of books which have more than 10 units in stock.

SELECT Title
FROM Books
WHERE Quantity > 10;

Title
book4
book6
book7

5. Show the total price *lastname1 firstname1* has paid for the books. 

SELECT SUM(Books.UnitPrice * OrderDetails.Quantity) AS TotalPaid
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
WHERE Customers.LastName = 'lastname1' AND Customers.FirstName = 'firstname1';

6. Show the names of the customers who have paid less than $80 in totals.

SELECT Customers.FirstName, Customers.LastName, SUM(Books.UnitPrice * OrderDetails.Quantity) AS TotalAmountPaid
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
GROUP BY Customers.CustomerID
HAVING TotalAmountPaid < 80;

FirstName	LastName	TotalAmountPaid
firstname2	lastname2	78.90
firstname3	lastname3	12.34


7. Show the name of books supplied by *supplier2*.

SELECT Title
FROM Books
WHERE SupplierID = 2;

Title
book3
book5


8. Show the total price each customer paid and their names. List the result in
descending price.

SELECT Customers.FirstName, Customers.LastName, SUM(Books.UnitPrice * OrderDetails.Quantity) AS TotalAmountPaid
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
GROUP BY Customers.CustomerID
ORDER BY TotalAmountPaid DESC;


FirstName	LastName	TotalAmountPaid
firstname4	lastname4	296.38
firstname1	lastname1	266.96
firstname2	lastname2	78.90
firstname3	lastname3	12.34

9. Show the names of all the books shipped on 08/04/2016 and their shippers'
names.

SELECT Books.Title AS BookName, Shippers.ShipperName
FROM Books
JOIN OrderDetails ON Books.BookID = OrderDetails.BookID
JOIN Orders ON OrderDetails.OrderID = Orders.OrderID
JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID
WHERE Orders.ShippedDate = '2016-08-04';

10. Show the unique names of all the books *lastname1 firstname1* and *lastname4
firstname4* *both* ordered.

SELECT DISTINCT b.Title
FROM Books b
JOIN OrderDetails od ON b.BookID = od.BookID
JOIN Orders o ON od.OrderID = o.OrderID
JOIN Customers c ON o.CustomerID = c.CustomerID
WHERE c.LastName = 'lastname1' AND c.FirstName = 'firstname1'
AND EXISTS (
    SELECT 1
    FROM Books b2
    JOIN OrderDetails od2 ON b2.BookID = od2.BookID
    JOIN Orders o2 ON od2.OrderID = o2.OrderID
    JOIN Customers c2 ON o2.CustomerID = c2.CustomerID
    WHERE c2.LastName = 'lastname4' AND c2.FirstName = 'firstname4'
    AND b2.BookID = b.BookID
);

11. Show the names of all the books *lastname6 firstname6* was responsible for. 

SELECT DISTINCT Books.Title
FROM Books
JOIN OrderDetails ON Books.BookID = OrderDetails.BookID
JOIN Orders ON OrderDetails.OrderID = Orders.OrderID
JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID
WHERE Employees.LastName = 'lastname6' AND Employees.FirstName = 'firstname6';

12. Show the names of all the ordered books and their total quantities. List the result in ascending quantity.

SELECT Books.Title, SUM(OrderDetails.Quantity) AS TotalQuantity
FROM Books
JOIN OrderDetails ON Books.BookID = OrderDetails.BookID
GROUP BY Books.Title
ORDER BY TotalQuantity ASC;

Title	TotalQuantity
book5	1
book3	2
book4	2
book6	2
book7	4
book1	6


13. Show the names of the customers who ordered at least 2 books.

SELECT Customers.FirstName, Customers.LastName
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
GROUP BY Customers.CustomerID
HAVING SUM(OrderDetails.Quantity) >= 2;

FirstName	LastName
firstname1	lastname1
firstname4	lastname4


14.Show the name of the customers who have ordered at least a book in *category3* or *category4* and the book names.

SELECT DISTINCT Customers.FirstName, Customers.LastName, Books.Title
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
JOIN Subjects ON Books.SubjectID = Subjects.SubjectID
WHERE Subjects.CategoryName IN ('category3', 'category4');

15. Show the name of the customer who has ordered at least one book written by
*author1*.

SELECT DISTINCT Customers.FirstName, Customers.LastName
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
WHERE Books.Author = 'author1';

16. Show the name and total sale (price of orders) of each employee.

SELECT Employees.FirstName, Employees.LastName, 
       SUM(Books.UnitPrice * OrderDetails.Quantity) AS TotalSales
FROM Employees
JOIN Orders ON Employees.EmployeeID = Orders.EmployeeID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
JOIN Books ON OrderDetails.BookID = Books.BookID
GROUP BY Employees.EmployeeID
ORDER BY TotalSales DESC;

FirstName	LastName	TotalSales
firstname6	lastname6	491.76
firstname5	lastname5	162.82

17. Show the book names and their respective quantities for open orders (the orders which have
not been shipped) at midnight 08/04/2016.

SELECT Books.Title, OrderDetails.Quantity
FROM Books
JOIN OrderDetails ON Books.BookID = OrderDetails.BookID
JOIN Orders ON OrderDetails.OrderID = Orders.OrderID
WHERE Orders.ShippedDate IS NULL
AND Orders.OrderDate <= '2016-08-04 23:59:59';

18. Show the names of customers who have ordered more than 1 book and the
corresponding quantities. List the result in the descending quantity.

SELECT Customers.FirstName, Customers.LastName, SUM(OrderDetails.Quantity) AS TotalQuantity
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
GROUP BY Customers.CustomerID
HAVING TotalQuantity > 1
ORDER BY TotalQuantity DESC;

FirstName	LastName	TotalQuantity
firstname1	lastname1	9
firstname4	lastname4	6

19. Show the names of customers who have ordered more than 3 books and their
respective telephone numbers.


SELECT Customers.FirstName, Customers.LastName, Customers.Phone, SUM(OrderDetails.Quantity) AS TotalBooksOrdered
FROM Customers
JOIN Orders ON Customers.CustomerID = Orders.CustomerID
JOIN OrderDetails ON Orders.OrderID = OrderDetails.OrderID
GROUP BY Customers.CustomerID
HAVING TotalBooksOrdered > 3
ORDER BY TotalBooksOrdered DESC;

FirstName	LastName	Phone	TotalBooksOrdered
firstname1	lastname1	334-001-001	9
firstname4	lastname4	334-004-004	6

